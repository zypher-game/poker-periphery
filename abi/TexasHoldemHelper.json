[
  {
    "inputs": [],
    "name": "InvalidSignature",
    "type": "error"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "enum IPokerTable.PokerSuit",
            "name": "suit",
            "type": "uint8"
          },
          {
            "internalType": "enum IPokerTable.PokerRank",
            "name": "rank",
            "type": "uint8"
          }
        ],
        "internalType": "struct IPokerTable.PokerCard[7]",
        "name": "cards",
        "type": "tuple[7]"
      }
    ],
    "name": "bestHand",
    "outputs": [
      {
        "internalType": "enum HandRanking",
        "name": "ranking",
        "type": "uint8"
      },
      {
        "internalType": "uint64",
        "name": "kickers",
        "type": "uint64"
      }
    ],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "enum IPokerTable.PokerSuit",
            "name": "suit",
            "type": "uint8"
          },
          {
            "internalType": "enum IPokerTable.PokerRank",
            "name": "rank",
            "type": "uint8"
          }
        ],
        "internalType": "struct IPokerTable.PokerCard[5]",
        "name": "cards",
        "type": "tuple[5]"
      }
    ],
    "name": "getHandRanking",
    "outputs": [
      {
        "internalType": "enum HandRanking",
        "name": "ranking",
        "type": "uint8"
      },
      {
        "internalType": "uint64",
        "name": "kickers",
        "type": "uint64"
      }
    ],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes",
        "name": "signature",
        "type": "bytes"
      },
      {
        "internalType": "string",
        "name": "salt",
        "type": "string"
      }
    ],
    "name": "parseSigner",
    "outputs": [
      {
        "internalType": "address",
        "name": "signer",
        "type": "address"
      }
    ],
    "stateMutability": "pure",
    "type": "function"
  }
]
