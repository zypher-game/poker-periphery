/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export interface IOneTimeDrawInterface extends utils.Interface {
  functions: {
    "drawCardsNSubmitRevealTokens(address,uint256[],uint256[],bytes[],bytes[])": FunctionFragment;
    "foldCards(address,uint256[],bytes[],bytes[])": FunctionFragment;
    "showHand(address,uint256[],bytes[],bytes[])": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "drawCardsNSubmitRevealTokens"
      | "foldCards"
      | "showHand"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "drawCardsNSubmitRevealTokens",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BytesLike>[],
      PromiseOrValue<BytesLike>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "foldCards",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BytesLike>[],
      PromiseOrValue<BytesLike>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "showHand",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BytesLike>[],
      PromiseOrValue<BytesLike>[]
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "drawCardsNSubmitRevealTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "foldCards", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "showHand", data: BytesLike): Result;

  events: {
    "PlayerDrewCards(address,uint256[])": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "PlayerDrewCards"): EventFragment;
}

export interface PlayerDrewCardsEventObject {
  player: string;
  cards: BigNumber[];
}
export type PlayerDrewCardsEvent = TypedEvent<
  [string, BigNumber[]],
  PlayerDrewCardsEventObject
>;

export type PlayerDrewCardsEventFilter = TypedEventFilter<PlayerDrewCardsEvent>;

export interface IOneTimeDraw extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IOneTimeDrawInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    drawCardsNSubmitRevealTokens(
      _player: PromiseOrValue<string>,
      _myIndexes: PromiseOrValue<BigNumberish>[],
      _othersIndexes: PromiseOrValue<BigNumberish>[],
      _revealTokens: PromiseOrValue<BytesLike>[],
      _revealProofs: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    foldCards(
      _player: PromiseOrValue<string>,
      _unrevealedIndexes: PromiseOrValue<BigNumberish>[],
      _revealTokens: PromiseOrValue<BytesLike>[],
      _revealProofs: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    showHand(
      _player: PromiseOrValue<string>,
      _cardIndexes: PromiseOrValue<BigNumberish>[],
      _revealTokens: PromiseOrValue<BytesLike>[],
      _revealProofs: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  drawCardsNSubmitRevealTokens(
    _player: PromiseOrValue<string>,
    _myIndexes: PromiseOrValue<BigNumberish>[],
    _othersIndexes: PromiseOrValue<BigNumberish>[],
    _revealTokens: PromiseOrValue<BytesLike>[],
    _revealProofs: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  foldCards(
    _player: PromiseOrValue<string>,
    _unrevealedIndexes: PromiseOrValue<BigNumberish>[],
    _revealTokens: PromiseOrValue<BytesLike>[],
    _revealProofs: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  showHand(
    _player: PromiseOrValue<string>,
    _cardIndexes: PromiseOrValue<BigNumberish>[],
    _revealTokens: PromiseOrValue<BytesLike>[],
    _revealProofs: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    drawCardsNSubmitRevealTokens(
      _player: PromiseOrValue<string>,
      _myIndexes: PromiseOrValue<BigNumberish>[],
      _othersIndexes: PromiseOrValue<BigNumberish>[],
      _revealTokens: PromiseOrValue<BytesLike>[],
      _revealProofs: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<void>;

    foldCards(
      _player: PromiseOrValue<string>,
      _unrevealedIndexes: PromiseOrValue<BigNumberish>[],
      _revealTokens: PromiseOrValue<BytesLike>[],
      _revealProofs: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<void>;

    showHand(
      _player: PromiseOrValue<string>,
      _cardIndexes: PromiseOrValue<BigNumberish>[],
      _revealTokens: PromiseOrValue<BytesLike>[],
      _revealProofs: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "PlayerDrewCards(address,uint256[])"(
      player?: PromiseOrValue<string> | null,
      cards?: null
    ): PlayerDrewCardsEventFilter;
    PlayerDrewCards(
      player?: PromiseOrValue<string> | null,
      cards?: null
    ): PlayerDrewCardsEventFilter;
  };

  estimateGas: {
    drawCardsNSubmitRevealTokens(
      _player: PromiseOrValue<string>,
      _myIndexes: PromiseOrValue<BigNumberish>[],
      _othersIndexes: PromiseOrValue<BigNumberish>[],
      _revealTokens: PromiseOrValue<BytesLike>[],
      _revealProofs: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    foldCards(
      _player: PromiseOrValue<string>,
      _unrevealedIndexes: PromiseOrValue<BigNumberish>[],
      _revealTokens: PromiseOrValue<BytesLike>[],
      _revealProofs: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    showHand(
      _player: PromiseOrValue<string>,
      _cardIndexes: PromiseOrValue<BigNumberish>[],
      _revealTokens: PromiseOrValue<BytesLike>[],
      _revealProofs: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    drawCardsNSubmitRevealTokens(
      _player: PromiseOrValue<string>,
      _myIndexes: PromiseOrValue<BigNumberish>[],
      _othersIndexes: PromiseOrValue<BigNumberish>[],
      _revealTokens: PromiseOrValue<BytesLike>[],
      _revealProofs: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    foldCards(
      _player: PromiseOrValue<string>,
      _unrevealedIndexes: PromiseOrValue<BigNumberish>[],
      _revealTokens: PromiseOrValue<BytesLike>[],
      _revealProofs: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    showHand(
      _player: PromiseOrValue<string>,
      _cardIndexes: PromiseOrValue<BigNumberish>[],
      _revealTokens: PromiseOrValue<BytesLike>[],
      _revealProofs: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
