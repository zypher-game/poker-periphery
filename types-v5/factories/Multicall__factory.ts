/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { Multicall, MulticallInterface } from "../Multicall";

const _abi = [
  "function aggregate(tuple(address,bytes)[]) returns (uint256, bytes[])",
  "function getBlockHash(uint256) view returns (bytes32)",
  "function getCurrentBlockCoinbase() view returns (address)",
  "function getCurrentBlockDifficulty() view returns (uint256)",
  "function getCurrentBlockGasLimit() view returns (uint256)",
  "function getCurrentBlockTimestamp() view returns (uint256)",
  "function getEthBalance(address) view returns (uint256)",
  "function getLastBlockHash() view returns (bytes32)",
] as const;

export class Multicall__factory {
  static readonly abi = _abi;
  static createInterface(): MulticallInterface {
    return new utils.Interface(_abi) as MulticallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Multicall {
    return new Contract(address, _abi, signerOrProvider) as Multicall;
  }
}
