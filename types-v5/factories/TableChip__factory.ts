/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { TableChip, TableChipInterface } from "../TableChip";

const _abi = [
  "error ChipError()",
  "error ChipForbidden()",
  "event Approval(address indexed,address indexed,uint256)",
  "event Initialized(uint8)",
  "event Transfer(address indexed,address indexed,uint256)",
  "function allowance(address,address) view returns (uint256)",
  "function approve(address,uint256) returns (bool)",
  "function balanceOf(address) view returns (uint256)",
  "function decimals() view returns (uint8)",
  "function decreaseAllowance(address,uint256) returns (bool)",
  "function increaseAllowance(address,uint256) returns (bool)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address,uint256) returns (bool)",
  "function transferFrom(address,address,uint256) returns (bool)",
] as const;

export class TableChip__factory {
  static readonly abi = _abi;
  static createInterface(): TableChipInterface {
    return new utils.Interface(_abi) as TableChipInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TableChip {
    return new Contract(address, _abi, signerOrProvider) as TableChip;
  }
}
