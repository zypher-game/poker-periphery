/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAccessControl,
  IAccessControlInterface,
} from "../IAccessControl";

const _abi = [
  "event RoleAdminChanged(bytes32 indexed,bytes32 indexed,bytes32 indexed)",
  "event RoleGranted(bytes32 indexed,address indexed,address indexed)",
  "event RoleRevoked(bytes32 indexed,address indexed,address indexed)",
  "function getRoleAdmin(bytes32) view returns (bytes32)",
  "function grantRole(bytes32,address)",
  "function hasRole(bytes32,address) view returns (bool)",
  "function renounceRole(bytes32,address)",
  "function revokeRole(bytes32,address)",
] as const;

export class IAccessControl__factory {
  static readonly abi = _abi;
  static createInterface(): IAccessControlInterface {
    return new Interface(_abi) as IAccessControlInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IAccessControl {
    return new Contract(address, _abi, runner) as unknown as IAccessControl;
  }
}
