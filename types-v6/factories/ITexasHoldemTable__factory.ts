/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ITexasHoldemTable,
  ITexasHoldemTableInterface,
} from "../ITexasHoldemTable";

const _abi = [
  "event Bet(uint8 indexed,uint8,uint256,uint256)",
  "function activePlayerCounts() view returns (uint8)",
  "function allinBets()",
  "function callBets()",
  "function cashOut()",
  "function checkBets()",
  "function claimPots(uint8) returns (uint256)",
  "function communityCards() view returns (tuple(uint8,uint8)[])",
  "function cutCards()",
  "function foldBets()",
  "function forceNewGame()",
  "function forceStopGame()",
  "function game() view returns (tuple(uint8,uint256,uint256,uint8,uint32))",
  "function holeCards(uint8,bytes) view returns (tuple(uint8,uint8)[])",
  "function info() view returns (tuple(uint32,string,address,uint8,uint8,uint8,uint256))",
  "function isPlaying() view returns (bool)",
  "function message() view returns (string)",
  "function newTable(tuple(address,string)[]) payable",
  "function position(uint8) view returns (tuple(uint8,tuple(address,string),uint256,uint256,uint32))",
  "function positionStatus(uint8) view returns (uint8)",
  "function pots() view returns (tuple(uint256,uint8[])[])",
  "function raiseBets(uint256)",
  "function setup(uint32,string,uint8,uint256,uint256,uint256,uint256,address,bytes[])",
  "function showCards()",
  "function timer() view returns (tuple(uint32,uint32,uint32,uint32))",
  "function totalPots() view returns (uint256)",
  "function winner(uint8) view returns (uint8[], uint8, uint64)",
] as const;

export class ITexasHoldemTable__factory {
  static readonly abi = _abi;
  static createInterface(): ITexasHoldemTableInterface {
    return new Interface(_abi) as ITexasHoldemTableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ITexasHoldemTable {
    return new Contract(address, _abi, runner) as unknown as ITexasHoldemTable;
  }
}
