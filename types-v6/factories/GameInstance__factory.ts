/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { GameInstance, GameInstanceInterface } from "../GameInstance";

const _abi = [
  "constructor(address,address,bytes,tuple(bytes,bytes,string)[],uint256)",
  "event PlayerJoined(address indexed,bytes,bytes)",
  "event PlayerLeft(address indexed)",
  "event PlayerShuffledDeck(address indexed,bytes[])",
  "event RevealedCards(uint256[],bytes32[])",
  "function NONE() view returns (bytes32)",
  "function addRevealTokens(address,bool,uint256[],bytes[],bytes[])",
  "function addrList(uint256) view returns (address)",
  "function addrToPlayers(address) view returns (address, bytes, bytes)",
  "function cardHash(bytes) pure returns (bytes32)",
  "function controller() view returns (address)",
  "function currentDeck() view returns (bytes[])",
  "function deck(uint256) view returns (bytes, bytes, string)",
  "function getPlayer(address) view returns (tuple(address,bytes,bytes,uint256[]))",
  "function getRevealTokens(uint256) view returns (bytes[])",
  "function hashToMaskedCards(bytes32) view returns (bytes)",
  "function hashToPlayingCards(bytes32) view returns (string)",
  "function hashedCards(uint256) view returns (bytes32)",
  "function isFull() view returns (bool)",
  "function isOpen(uint256) view returns (bool)",
  "function isPlayer(address) view returns (bool)",
  "function isUsed(uint256) view returns (bool)",
  "function joinGame(address,bytes,bytes,bytes)",
  "function leaveGame(address)",
  "function numJoinedPlayers() view returns (uint256)",
  "function numPlayers() view returns (uint256)",
  "function numUsed() view returns (uint256)",
  "function numUsedCards() view returns (uint256)",
  "function openedCards(uint256) view returns (bytes32)",
  "function params() view returns (bytes)",
  "function players() view returns (address[])",
  "function playingCard(uint256) view returns (string)",
  "function poker() view returns (address)",
  "function readyToReveal(uint256[]) view returns (bool)",
  "function resetGame(bytes,uint256)",
  "function revealTokens(uint256,uint256) view returns (bytes)",
  "function setUsed(uint256[])",
  "function sharedKey() view returns (bytes)",
  "function shuffleDeck(address,bytes[],bytes)",
  "function tableFee() view returns (uint256)",
  "function usedCards(uint256) view returns (bool)",
] as const;

export class GameInstance__factory {
  static readonly abi = _abi;
  static createInterface(): GameInstanceInterface {
    return new Interface(_abi) as GameInstanceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GameInstance {
    return new Contract(address, _abi, runner) as unknown as GameInstance;
  }
}
