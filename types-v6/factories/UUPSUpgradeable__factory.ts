/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  UUPSUpgradeable,
  UUPSUpgradeableInterface,
} from "../UUPSUpgradeable";

const _abi = [
  "event AdminChanged(address,address)",
  "event BeaconUpgraded(address indexed)",
  "event Initialized(uint8)",
  "event Upgraded(address indexed)",
  "function proxiableUUID() view returns (bytes32)",
  "function upgradeTo(address)",
  "function upgradeToAndCall(address,bytes) payable",
] as const;

export class UUPSUpgradeable__factory {
  static readonly abi = _abi;
  static createInterface(): UUPSUpgradeableInterface {
    return new Interface(_abi) as UUPSUpgradeableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UUPSUpgradeable {
    return new Contract(address, _abi, runner) as unknown as UUPSUpgradeable;
  }
}
