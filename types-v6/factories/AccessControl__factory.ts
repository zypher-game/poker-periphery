/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { AccessControl, AccessControlInterface } from "../AccessControl";

const _abi = [
  "event RoleAdminChanged(bytes32 indexed,bytes32 indexed,bytes32 indexed)",
  "event RoleGranted(bytes32 indexed,address indexed,address indexed)",
  "event RoleRevoked(bytes32 indexed,address indexed,address indexed)",
  "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
  "function getRoleAdmin(bytes32) view returns (bytes32)",
  "function grantRole(bytes32,address)",
  "function hasRole(bytes32,address) view returns (bool)",
  "function renounceRole(bytes32,address)",
  "function revokeRole(bytes32,address)",
  "function supportsInterface(bytes4) view returns (bool)",
] as const;

export class AccessControl__factory {
  static readonly abi = _abi;
  static createInterface(): AccessControlInterface {
    return new Interface(_abi) as AccessControlInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AccessControl {
    return new Contract(address, _abi, runner) as unknown as AccessControl;
  }
}
