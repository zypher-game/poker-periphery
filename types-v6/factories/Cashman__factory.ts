/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { Cashman, CashmanInterface } from "../Cashman";

const _abi = [
  "event Approval(address indexed,address indexed,uint256)",
  "event Transfer(address indexed,address indexed,uint256)",
  "function allowance(address,address) view returns (uint256)",
  "function approve(address,uint256) returns (bool)",
  "function balanceOf(address) view returns (uint256)",
  "function buyIn(uint256,address) payable returns (uint256)",
  "function cashOut(uint256,address) returns (uint256, uint256)",
  "function decimals() view returns (uint8)",
  "function decreaseAllowance(address,uint256) returns (bool)",
  "function increaseAllowance(address,uint256) returns (bool)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address,uint256) returns (bool)",
  "function transferFrom(address,address,uint256) returns (bool)",
] as const;

export class Cashman__factory {
  static readonly abi = _abi;
  static createInterface(): CashmanInterface {
    return new Interface(_abi) as CashmanInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Cashman {
    return new Contract(address, _abi, runner) as unknown as Cashman;
  }
}
