/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { RandSeat, RandSeatInterface } from "../RandSeat";

const _abi = [
  "constructor(bytes,bytes[])",
  "function _hashToCard(bytes32) view returns (bytes, bytes, uint8)",
  "function _joiners(uint256) view returns (address)",
  "function _params() view returns (bytes)",
  "function _positions(uint256) view returns (bytes)",
  "function _publicKeys(uint256) view returns (bytes)",
  "function _shuffledDecks(uint256,uint256) view returns (bytes)",
  "function currentDeck() view returns (bytes[])",
  "function hashedCards(uint256) view returns (bytes32)",
  "function info() view returns (bytes, bytes[])",
  "function join(bytes)",
  "function maskThem()",
  "function maskedCards() view returns (bytes[])",
  "function openedCards(uint256) view returns (bytes32)",
  "function poker() view returns (address)",
  "function sharedKey() view returns (bytes)",
  "function shuffleThem(bytes[],bytes)",
] as const;

export class RandSeat__factory {
  static readonly abi = _abi;
  static createInterface(): RandSeatInterface {
    return new Interface(_abi) as RandSeatInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RandSeat {
    return new Contract(address, _abi, runner) as unknown as RandSeat;
  }
}
