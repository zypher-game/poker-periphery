/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  TexasHoldemRound,
  TexasHoldemRoundInterface,
} from "../TexasHoldemRound";

const _abi = [
  "constructor(uint256)",
  "event BetBigBlind(address indexed,uint256)",
  "event BetSmallBlind(address indexed,uint256)",
  "event ButtonPicked(address indexed)",
  "event GameEnded(address indexed,uint256)",
  "event GameTimeout(address indexed,uint256)",
  "event PlayerCalled(address indexed,uint256)",
  "event PlayerChecked(address indexed,uint256)",
  "event PlayerFolded(address indexed)",
  "event PlayerRaised(address indexed,uint256)",
  "event PlayerShowed(address indexed,uint256[])",
  "event RoleAdminChanged(bytes32 indexed,bytes32 indexed,bytes32 indexed)",
  "event RoleGranted(bytes32 indexed,address indexed,address indexed)",
  "event RoleRevoked(bytes32 indexed,address indexed,address indexed)",
  "function BIG_BLIND() view returns (uint256)",
  "function COMMISSION(uint256) view returns (uint16)",
  "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
  "function MIN_RAISE() view returns (uint256)",
  "function SMALL_BLIND() view returns (uint256)",
  "function TIMEOUT_ACT() view returns (uint256)",
  "function bigBlindBet() payable",
  "function button() view returns (uint256)",
  "function calls() payable",
  "function check()",
  "function deadline() view returns (uint256)",
  "function drawCards(bytes[],bytes[])",
  "function flipCards(bytes[],bytes[])",
  "function fold(bytes[],bytes[])",
  "function game() view returns (address)",
  "function getRoleAdmin(bytes32) view returns (bytes32)",
  "function grantRole(bytes32,address)",
  "function hasRole(bytes32,address) view returns (bool)",
  "function joinGame(bytes,bytes,bytes) payable",
  "function leaveGame()",
  "function pickButton(uint256)",
  "function player2Act() view returns (address)",
  "function playerBet(address) view returns (uint256)",
  "function playerBets(address) view returns (uint256)",
  "function playerDone(address) view returns (bool)",
  "function playerRemain() view returns (uint256)",
  "function players(uint256) view returns (address)",
  "function pot() view returns (uint256)",
  "function purgePlayer(address)",
  "function raise() payable",
  "function renounceRole(bytes32,address)",
  "function resetGame(bytes,uint256,uint256)",
  "function revokeRole(bytes32,address)",
  "function setGameInstance(address)",
  "function showdown(bytes[],bytes[])",
  "function shuffleDeck(bytes[],bytes)",
  "function smallBlindBet() payable",
  "function status() view returns (uint8)",
  "function supportsInterface(bytes4) view returns (bool)",
  "function tableFee() view returns (uint256)",
  "function whoRaised() view returns (address)",
  "function whoShowed() view returns (address)",
  "function winner() view returns (address)",
] as const;

export class TexasHoldemRound__factory {
  static readonly abi = _abi;
  static createInterface(): TexasHoldemRoundInterface {
    return new Interface(_abi) as TexasHoldemRoundInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TexasHoldemRound {
    return new Contract(address, _abi, runner) as unknown as TexasHoldemRound;
  }
}
