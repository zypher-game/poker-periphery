/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { Multicall2, Multicall2Interface } from "../Multicall2";

const _abi = [
  "function aggregate(tuple(address,bytes)[]) returns (uint256, bytes[])",
  "function blockAndAggregate(tuple(address,bytes)[]) returns (uint256, bytes32, tuple(bool,bytes)[])",
  "function getBlockHash(uint256) view returns (bytes32)",
  "function getBlockNumber() view returns (uint256)",
  "function getCurrentBlockCoinbase() view returns (address)",
  "function getCurrentBlockDifficulty() view returns (uint256)",
  "function getCurrentBlockGasLimit() view returns (uint256)",
  "function getCurrentBlockTimestamp() view returns (uint256)",
  "function getEthBalance(address) view returns (uint256)",
  "function getLastBlockHash() view returns (bytes32)",
  "function tryAggregate(bool,tuple(address,bytes)[]) returns (tuple(bool,bytes)[])",
  "function tryBlockAndAggregate(bool,tuple(address,bytes)[]) returns (uint256, bytes32, tuple(bool,bytes)[])",
] as const;

export class Multicall2__factory {
  static readonly abi = _abi;
  static createInterface(): Multicall2Interface {
    return new Interface(_abi) as Multicall2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): Multicall2 {
    return new Contract(address, _abi, runner) as unknown as Multicall2;
  }
}
