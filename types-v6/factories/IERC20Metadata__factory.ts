/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IERC20Metadata,
  IERC20MetadataInterface,
} from "../IERC20Metadata";

const _abi = [
  "event Approval(address indexed,address indexed,uint256)",
  "event Transfer(address indexed,address indexed,uint256)",
  "function allowance(address,address) view returns (uint256)",
  "function approve(address,uint256) returns (bool)",
  "function balanceOf(address) view returns (uint256)",
  "function decimals() view returns (uint8)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address,uint256) returns (bool)",
  "function transferFrom(address,address,uint256) returns (bool)",
] as const;

export class IERC20Metadata__factory {
  static readonly abi = _abi;
  static createInterface(): IERC20MetadataInterface {
    return new Interface(_abi) as IERC20MetadataInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IERC20Metadata {
    return new Contract(address, _abi, runner) as unknown as IERC20Metadata;
  }
}
